// <auto-generated />
using System;
using BookingWorkplace.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingWorkplace.DataBase.Migrations
{
    [DbContext(typeof(BookingWorkplaceDbContext))]
    [Migration("20221121231618_FixWorkplacePropertyNameForEquipmentForWorkplaceTableInDb")]
    partial class FixWorkplacePropertyNameForEquipmentForWorkplaceTableInDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.EquipmentForWorkplace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkplaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkplaceId");

                    b.HasIndex("EquipmentId", "WorkplaceId")
                        .IsUnique();

                    b.ToTable("EquipmentForWorkplaces");
                });

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TimeFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeTo")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkplaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkplaceId");

                    b.HasIndex("EmployeeId", "WorkplaceId", "TimeFrom", "TimeTo")
                        .IsUnique();

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.Workplace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeskNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Room", "Floor", "DeskNumber")
                        .IsUnique();

                    b.ToTable("Workplaces");
                });

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.EquipmentForWorkplace", b =>
                {
                    b.HasOne("BookingWorkplace.DataBase.Entities.Equipment", "Equipment")
                        .WithMany("EquipmentForWorkplaces")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingWorkplace.DataBase.Entities.Workplace", "Workplace")
                        .WithMany("EquipmentForWorkplaces")
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.Reservation", b =>
                {
                    b.HasOne("BookingWorkplace.DataBase.Entities.Employee", "Employee")
                        .WithMany("Reservations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingWorkplace.DataBase.Entities.Workplace", "Workplace")
                        .WithMany("Reservations")
                        .HasForeignKey("WorkplaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.Employee", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.Equipment", b =>
                {
                    b.Navigation("EquipmentForWorkplaces");
                });

            modelBuilder.Entity("BookingWorkplace.DataBase.Entities.Workplace", b =>
                {
                    b.Navigation("EquipmentForWorkplaces");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
